def mailTo = 'dict.pi.deinf.grupo@bcnet.bcb.gov.br'
def buildImage = 'docker.repo.bcnet.bcb.gov.br/bacen/devel-java17-21:1.0.0'
def affectedModules = []
def buildAll = false

properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '15', artifactNumToKeepStr: '5', daysToKeepStr: '15', numToKeepStr: '5')),
    disableConcurrentBuilds()
])

node('pi-build') {
  try {
    bcStage('Git Checkout') {
      checkout scm
    }

    bcStage('Change Detection') {
      def buildAllRE = /^(dict-core|dict-common|dict-dependencies|dict-starter-parent|pom.xml|Jenkinsfile)$/
      def changes = []
      for (entries in currentBuild.changeSets) {
        for (entry in entries) {
          for (file in entry.affectedFiles) {
            changes += file.path
          }
        }
      }
      changes.any { c ->
        def affected = c.replaceAll(/^[\/.]*/, '')
        affected = affected.contains('/') ? affected.split('/')[0] : affected
        if (affected ==~ buildAllRE) {
          buildAll = true
          return true
        } else {
          if (!affectedModules.contains(affected) && findFiles(glob: affected + '/Jenkinsfile') != []) {
            affectedModules.add(affected)
          }
        }
        return false
      }
      if (buildAll || affectedModules.isEmpty()) {
        affectedModules = ['dict-core']
      }
    }

    bcStage('Liquibase Indirect Execution') {
      docker.image(buildImage).inside("--entrypoint='' -e LANG='C.UTF-8' -e JAVA_HOME=/usr/java/jdk21 -e PATH=/usr/java/jdk21/bin:$PATH") {
        sh "mvn clean install -pl dict-core"
      }
    }

  } catch (e) {
    mailErro to: mailTo
    throw e
  }
}
